# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PipelineEntity(Model):
    """PipelineEntity.

    :param name:
    :type name: str
    :param description:
    :type description: str
    :param version:
    :type version: str
    :param graph_id:
    :type graph_id: str
    :param total_run_steps:
    :type total_run_steps: int
    :param parameter_assignments:
    :type parameter_assignments: dict[str, str]
    :param url:
    :type url: str
    :param id:
    :type id: str
    :param etag:
    :type etag: str
    :param created_date:
    :type created_date: datetime
    :param last_modified_date:
    :type last_modified_date: datetime
    :param entity_status: Possible values include: 'Active', 'Deprecated',
     'Disabled'
    :type entity_status: str or ~swagger.models.enum
    :param continue_run_on_step_failure:
    :type continue_run_on_step_failure: bool
    :param properties:
    :type properties: dict
    :param enable_email_notification:
    :type enable_email_notification: bool
    """

    _attribute_map = {
        'name': {'key': 'Name', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'version': {'key': 'Version', 'type': 'str'},
        'graph_id': {'key': 'GraphId', 'type': 'str'},
        'total_run_steps': {'key': 'TotalRunSteps', 'type': 'int'},
        'parameter_assignments': {'key': 'ParameterAssignments', 'type': '{str}'},
        'data_set_definition_value_assignments': {'key': 'DataSetDefinitionValueAssignments', 'type': '{DataSetDefinitionValue}'},
        'url': {'key': 'Url', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'str'},
        'etag': {'key': 'Etag', 'type': 'str'},
        'created_date': {'key': 'CreatedDate', 'type': 'iso-8601'},
        'last_modified_date': {'key': 'LastModifiedDate', 'type': 'iso-8601'},
        'entity_status': {'key': 'EntityStatus', 'type': 'str'},
        'continue_run_on_step_failure': {'key': 'ContinueRunOnStepFailure', 'type': 'bool'},
        'properties': {'key': 'Properties', 'type': '{object}'},
        'enable_email_notification': {'key': 'EnableNotification', 'type': 'bool'},
    }

    def __init__(self, name=None, description=None, version=None, graph_id=None, total_run_steps=None, parameter_assignments=None, data_set_definition_value_assignments=None, url=None, id=None, etag=None, created_date=None, last_modified_date=None, entity_status=None, continue_run_on_step_failure=None, properties=None, enable_email_notification=False):
        super(PipelineEntity, self).__init__()
        self.name = name
        self.description = description
        self.version = version
        self.graph_id = graph_id
        self.total_run_steps = total_run_steps
        self.parameter_assignments = parameter_assignments
        self.data_set_definition_value_assignments = data_set_definition_value_assignments
        self.url = url
        self.id = id
        self.etag = etag
        self.created_date = created_date
        self.last_modified_date = last_modified_date
        self.entity_status = entity_status
        self.continue_run_on_step_failure = continue_run_on_step_failure
        self.properties = properties
        self.enable_email_notification = enable_email_notification
