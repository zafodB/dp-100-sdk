# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class StructuredInterfaceOutput(Model):
    """StructuredInterfaceOutput.

    :param name:
    :type name: str
    :param label:
    :type label: str
    :param data_type_id:
    :type data_type_id: str
    :param pass_through_data_type_input_name:
    :type pass_through_data_type_input_name: str
    :param description:
    :type description: str
    :param skip_processing:
    :type skip_processing: bool
    :param data_store_name:
    :type data_store_name: str
    :param data_store_mode: Possible values include: 'None', 'Mount',
     'Download', 'Upload', 'Direct'
    :type data_store_mode: str or ~swagger.models.enum
    :param path_on_compute:
    :type path_on_compute: str
    :param overwrite:
    :type overwrite: bool
    :param data_reference_name:
    :type data_reference_name: str
    :param training_output:
    :type training_output: ~swagger.models.TrainingOutput
    :param dataset_output:
    :type dataset_output: ~swagger.models.DatasetOutput
    """

    _attribute_map = {
        'name': {'key': 'Name', 'type': 'str'},
        'label': {'key': 'Label', 'type': 'str'},
        'data_type_id': {'key': 'DataTypeId', 'type': 'str'},
        'pass_through_data_type_input_name': {'key': 'PassThroughDataTypeInputName', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'skip_processing': {'key': 'SkipProcessing', 'type': 'bool'},
        'data_store_name': {'key': 'DataStoreName', 'type': 'str'},
        'data_store_mode': {'key': 'DataStoreMode', 'type': 'str'},
        'path_on_compute': {'key': 'PathOnCompute', 'type': 'str'},
        'overwrite': {'key': 'Overwrite', 'type': 'bool'},
        'data_reference_name': {'key': 'DataReferenceName', 'type': 'str'},
        'training_output': {'key': 'TrainingOutput', 'type': 'TrainingOutput'},
        'dataset_output': {'key': 'DatasetOutput', 'type': 'DatasetOutput'},
    }

    def __init__(self, name=None, label=None, data_type_id=None, pass_through_data_type_input_name=None, description=None, skip_processing=None, data_store_name=None, data_store_mode=None, path_on_compute=None, overwrite=None, data_reference_name=None, training_output=None, dataset_output=None):
        super(StructuredInterfaceOutput, self).__init__()
        self.name = name
        self.label = label
        self.data_type_id = data_type_id
        self.pass_through_data_type_input_name = pass_through_data_type_input_name
        self.description = description
        self.skip_processing = skip_processing
        self.data_store_name = data_store_name
        self.data_store_mode = data_store_mode
        self.path_on_compute = path_on_compute
        self.overwrite = overwrite
        self.data_reference_name = data_reference_name
        self.training_output = training_output
        self.dataset_output = dataset_output
