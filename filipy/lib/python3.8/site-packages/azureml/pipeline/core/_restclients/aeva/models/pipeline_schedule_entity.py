# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PipelineScheduleEntity(Model):
    """PipelineScheduleEntity.

    :param name:
    :type name: str
    :param pipeline_id:
    :type pipeline_id: str
    :param pipeline_endpoint_id:
    :type pipeline_endpoint_id: str
    :param provisioning_status: Possible values include: 'Completed',
     'Provisioning', 'Failed'
    :type provisioning_status: str or ~swagger.models.enum
    :param pipeline_submission_info:
    :type pipeline_submission_info: ~swagger.models.PipelineSubmissionInfo
    :param recurrence:
    :type recurrence: ~swagger.models.Recurrence
    :param id:
    :type id: str
    :param etag:
    :type etag: str
    :param created_date:
    :type created_date: datetime
    :param last_modified_date:
    :type last_modified_date: datetime
    :param entity_status: Possible values include: 'Active', 'Deprecated',
     'Disabled'
    :type entity_status: str or ~swagger.models.enum
    :param schedule_type:
    :type schedule_type: str
    :param data_store_trigger_info:
    :type data_store_trigger_info: ~swagger.models.DataStoreTriggerInfo
    """

    _attribute_map = {
        'name': {'key': 'Name', 'type': 'str'},
        'pipeline_id': {'key': 'PipelineId', 'type': 'str'},
        'pipeline_endpoint_id': {'key': 'PipelineEndpointId', 'type': 'str'},
        'provisioning_status': {'key': 'ProvisioningStatus', 'type': 'str'},
        'pipeline_submission_info': {'key': 'PipelineSubmissionInfo', 'type': 'PipelineSubmissionInfo'},
        'recurrence': {'key': 'Recurrence', 'type': 'Recurrence'},
        'id': {'key': 'Id', 'type': 'str'},
        'etag': {'key': 'Etag', 'type': 'str'},
        'created_date': {'key': 'CreatedDate', 'type': 'str'},
        'last_modified_date': {'key': 'LastModifiedDate', 'type': 'str'},
        'entity_status': {'key': 'EntityStatus', 'type': 'str'},
        'schedule_type': {'key': 'ScheduleType', 'type': 'str'},
        'data_store_trigger_info': {'key': 'DataStoreTriggerInfo', 'type': 'DataStoreTriggerInfo'},
    }

    def __init__(self, name=None, pipeline_id=None, pipeline_endpoint_id=None, provisioning_status=None,
                 pipeline_submission_info=None, recurrence=None, id=None, etag=None, created_date=None,
                 last_modified_date=None, entity_status=None, schedule_type=None, data_store_trigger_info=None):
        super(PipelineScheduleEntity, self).__init__()
        self.name = name
        self.pipeline_id = pipeline_id
        self.pipeline_endpoint_id = pipeline_endpoint_id
        self.provisioning_status = provisioning_status
        self.pipeline_submission_info = pipeline_submission_info
        self.recurrence = recurrence
        self.id = id
        self.etag = etag
        self.created_date = created_date
        self.last_modified_date = last_modified_date
        self.entity_status = entity_status
        self.schedule_type = schedule_type
        self.data_store_trigger_info = data_store_trigger_info
