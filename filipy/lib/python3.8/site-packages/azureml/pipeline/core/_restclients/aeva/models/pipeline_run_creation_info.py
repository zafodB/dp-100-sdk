# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PipelineRunCreationInfo(Model):
    """PipelineRunCreationInfo.

    :param description:
    :type description: str
    :param continue_experiment_on_node_failure:
    :type continue_experiment_on_node_failure: bool
    :param continue_run_on_step_failure:
    :type continue_run_on_step_failure: bool
    :param parameter_assignments:
    :type parameter_assignments: dict[str, str]
    :param data_path_assignments:
    :type data_path_assignments: dict[str, ~swagger.models.LegacyDataPath]
    :param data_set_definition_value_assignments:
    :type data_set_definition_value_assignments: dict[str,
     ~swagger.models.DataSetDefinitionValue]
    :param run_source:
    :type run_source: str
    :param run_type: Possible values include: 'HTTP', 'SDK', 'Schedule',
     'Portal'
    :type run_type: str or ~swagger.models.enum
    :param run_history_experiment_name:
    :type run_history_experiment_name: str
    :param tags:
    :type tags: dict[str, str]
    :param properties:
    :type properties: dict[str, str]
    :param enable_email_notification:
    :type enable_email_notification: bool
    """

    _attribute_map = {
        'description': {'key': 'Description', 'type': 'str'},
        'continue_experiment_on_node_failure': {'key': 'ContinueExperimentOnNodeFailure', 'type': 'bool'},
        'continue_run_on_step_failure': {'key': 'ContinueRunOnStepFailure', 'type': 'bool'},
        'parameter_assignments': {'key': 'ParameterAssignments', 'type': '{str}'},
        'data_path_assignments': {'key': 'DataPathAssignments', 'type': '{LegacyDataPath}'},
        'data_set_definition_value_assignments': {'key': 'DataSetDefinitionValueAssignments', 'type': '{DataSetDefinitionValue}'},
        'run_source': {'key': 'RunSource', 'type': 'str'},
        'run_type': {'key': 'RunType', 'type': 'str'},
        'run_history_experiment_name': {'key': 'RunHistoryExperimentName', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'properties': {'key': 'Properties', 'type': '{str}'},
        'enable_email_notification': {'key': 'EnableNotification', 'type': 'bool'},
    }

    def __init__(self, description=None, continue_experiment_on_node_failure=None, continue_run_on_step_failure=None, parameter_assignments=None, data_path_assignments=None, data_set_definition_value_assignments=None, run_source=None, run_type=None, run_history_experiment_name=None, tags=None, properties=None, enable_email_notification=None):
        super(PipelineRunCreationInfo, self).__init__()
        self.description = description
        self.continue_experiment_on_node_failure = continue_experiment_on_node_failure
        self.continue_run_on_step_failure = continue_run_on_step_failure
        self.parameter_assignments = parameter_assignments
        self.data_path_assignments = data_path_assignments
        self.data_set_definition_value_assignments = data_set_definition_value_assignments
        self.run_source = run_source
        self.run_type = run_type
        self.run_history_experiment_name = run_history_experiment_name
        self.tags = tags
        self.properties = properties
        self.enable_email_notification = enable_email_notification
